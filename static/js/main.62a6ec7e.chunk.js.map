{"version":3,"sources":["utils/GlobalState.js","components/Form.js","components/TodoList.js","App.js","index.js"],"names":["TodoContext","createContext","id","name","priority","Provider","reducer","state","action","type","length","Math","random","filter","_","index","map","item","Object","assign","TodoProvider","value","props","useReducer","dispatch","useTodoContext","useContext","Form","inputRef","useRef","className","onSubmit","e","preventDefault","current","ref","placeholder","TodoList","key","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"qNAEMA,EAAcC,wBAAc,CAChCC,GAAI,GACJC,KAAM,GACNC,UAAU,IAEJC,EAAaL,EAAbK,SAER,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACf,IAAK,MACH,MAAM,GAAN,mBACKF,GADL,CAEE,CACEL,GAAIK,EAAMG,OAASC,KAAKC,SACxBT,KAAMK,EAAOL,QAGnB,IAAK,SACH,OAAOI,EAAMM,QAAO,SAACC,EAAGC,GACtB,OAAOA,IAAUP,EAAOO,SAE5B,IAAK,aACH,OAAOR,EAAMS,KAAI,SAACC,EAAMF,GACtB,OAAIA,IAAUP,EAAOO,MACZG,OAAOC,OAAO,GAAIF,EAAM,CAC7Bb,UAAWa,EAAKb,WAGba,KAEX,QACE,OAAOV,GAIX,SAASa,EAAT,GAAgD,EAAxBC,MAAyB,IAAVC,EAAS,2BACpBC,qBAAWjB,EAAS,IADA,mBACvCC,EADuC,KAChCiB,EADgC,KAG9C,OAAO,kBAACnB,EAAD,eAAUgB,MAAO,CAACd,EAAOiB,IAAeF,IAGjD,SAASG,IACP,OAAOC,qBAAW1B,GCVL2B,MA/Bf,WACE,IAAMC,EAAWC,mBADH,EAEQJ,IAFR,mBAEJD,GAFI,WAcd,OACE,6BACE,mDACA,0BAAMM,UAAU,kBAAkBC,SAbtC,SAAsBC,GACpBA,EAAEC,iBAEFT,EAAS,CACPf,KAAM,MACNN,KAAMyB,EAASM,QAAQb,QAEzBO,EAASM,QAAQb,MAAQ,KAOrB,2BACES,UAAU,eACVK,IAAKP,EACLQ,YAAY,wCAEd,4BAAQN,UAAU,4BAA4BrB,KAAK,UAAnD,kBCMO4B,MA7Bf,WAAqB,IAAD,EACQZ,IADR,mBACXlB,EADW,KACJiB,EADI,KAGlB,OACE,6BACE,6CACA,wBAAIM,UAAU,cACXvB,EAAMS,KAAI,SAACC,EAAMF,GAAP,OACT,wBAAIe,UAAU,yBAAyBQ,IAAKrB,EAAKf,IAC/C,4BACE4B,UAAU,uBACVS,QAAS,kBAAMf,EAAS,CAAEf,KAAM,aAAcM,YAFhD,cAMA,4BACEe,UAAU,sBACVS,QAAS,kBAAMf,EAAS,CAAEf,KAAM,SAAUM,YAF5C,YAMCA,EAbH,IAaU,0BAAMe,UAAWb,EAAKb,SAAW,mBAAqB,IAAtD,IAA4Da,EAAKd,a,MCPtEqC,MAXf,WACE,OACE,yBAAKV,UAAU,aACb,kBAACV,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,S,MCNRqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.62a6ec7e.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\n\nconst TodoContext = createContext({\n  id: \"\",\n  name: \"\",\n  priority: false\n});\nconst { Provider } = TodoContext;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n  case \"add\":\n    return [\n      ...state,\n      {\n        id: state.length * Math.random(),\n        name: action.name\n      }\n    ];\n  case \"remove\":\n    return state.filter((_, index) => {\n      return index !== action.index;\n    });\n  case \"prioritize\":\n    return state.map((item, index) => {\n      if (index === action.index) {\n        return Object.assign({}, item, {\n          priority: !item.priority\n        });\n      }\n      return item;\n    });\n  default:\n    return state;\n  }\n}\n\nfunction TodoProvider({ value = [], ...props }) {\n  const [state, dispatch] = useReducer(reducer, []);\n\n  return <Provider value={[state, dispatch]} {...props} />;\n}\n\nfunction useTodoContext() {\n  return useContext(TodoContext);\n}\n\nexport { TodoProvider, useTodoContext };\n","import React, { useRef } from \"react\";\nimport { useTodoContext } from \"../utils/GlobalState\";\n\nfunction Form() {\n  const inputRef = useRef();\n  const [_, dispatch] = useTodoContext();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    dispatch({\n      type: \"add\",\n      name: inputRef.current.value\n    });\n    inputRef.current.value = \"\";\n  }\n\n  return (\n    <div>\n      <h1>Create a Todo List!</h1>\n      <form className=\"form-group mt-5\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-control\"\n          ref={inputRef}\n          placeholder=\"Start typing what you need to do...\"\n        />\n        <button className=\"btn btn-success mt-3 mb-5\" type=\"submit\">\n          Add to List\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport { useTodoContext } from \"../utils/GlobalState\";\n\nfunction TodoList() {\n  const [state, dispatch] = useTodoContext();\n\n  return (\n    <div>\n      <h4>My Todo List:</h4>\n      <ul className=\"list-group\">\n        {state.map((item, index) => (\n          <li className=\"list-group-item col-12\" key={item.id}>\n            <button\n              className=\"btn btn-warning mr-4\"\n              onClick={() => dispatch({ type: \"prioritize\", index })}\n            >\n              Prioritize\n            </button>\n            <button\n              className=\"btn btn-danger mr-4\"\n              onClick={() => dispatch({ type: \"remove\", index })}\n            >\n              X Remove\n            </button>\n            {index}:<span className={item.priority ? \"font-weight-bold\" : \"\"}> {item.name}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { TodoProvider } from \"./utils/GlobalState\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TodoProvider>\n        <Form />\n        <TodoList />\n      </TodoProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}